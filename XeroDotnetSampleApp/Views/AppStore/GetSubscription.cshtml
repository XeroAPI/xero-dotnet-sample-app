@model dynamic

<h2>Get Subscription Result</h2>

<br />
<p>Control the metered billing usage from here arbitrarily for simulation purpose</p>
<br />

@if (ViewBag.SubscriptionModel != null)
{
    var subscription = ViewBag.SubscriptionModel;
    var usageRecords = ViewBag.UsageRecords as IEnumerable<Xero.NetStandard.OAuth2.Model.Appstore.UsageRecord>;

    <h4>Subscription Summary</h4>
    <table class="table table-bordered">
        <tr><th class="text-center">Subscription Plan Name</th><td>@subscription.Plans[0].Name</td></tr>
        <tr><th class="text-center">Subscription ID</th><td>@subscription.Id</td></tr>
        <tr><th class="text-center">Status</th><td>@subscription.Status</td></tr>
        <tr><th class="text-center">Start Date</th><td>@subscription.StartDate</td></tr>
        <tr><th class="text-center">End Date</th><td>@subscription.EndDate</td></tr>
        <tr><th class="text-center">Current Period End</th><td>@subscription.CurrentPeriodEnd</td></tr>
        <tr><th class="text-center">Organisation ID</th><td>@subscription.OrganisationId</td></tr>
        <tr><th class="text-center">Test Mode</th><td>@subscription.TestMode</td></tr>
    </table>

    @if (usageRecords != null)
    {
        <h4>Plan: @subscription.Plans[0].Name (@subscription.Plans[0].Status)</h4>
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th class="text-center">Item ID</th>
                    <th class="text-center">Product</th>
                    <th class="text-center">Type</th>
                    <th class="text-center">Usage Quantity</th>
                    <th class="text-center">Price (Amount)</th>
                    <th class="text-center">Currency</th>
                    <th class="text-center">Status</th>
                    <th class="text-center">Start Date</th>
                    <th class="text-center">End Date</th>
                    <th class="text-center">Test Mode</th>
                    <th class="text-center">Post Usage</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in (subscription.Plans[0].SubscriptionItems as IEnumerable<XeroDotnetSampleApp.Models.SubscriptionItem>)
                    ?.OrderBy(i => i.Product?.Type == "FIXED" ? 0 : 1) ?? Enumerable.Empty<XeroDotnetSampleApp.Models.SubscriptionItem>())
                {
                    int totalQuantity = 0;
                    <tr>
                        <td class="text-center">@item.Id</td>
                        <td class="text-center">@item.Product?.Name</td>
                        <td class="text-center">@item.Product?.Type</td>
                        <td class="text-center">
                            @if (item.Product.Type == "METERED")
                            {
                                if (usageRecords != null)
                                {
                                    foreach (var r in usageRecords)
                                    {
                                        if (Guid.TryParse(r.SubscriptionItemId, out var rItemId) && rItemId == item.Id)
                                        {
                                            totalQuantity += r.Quantity ?? 0;
                                        }
                                    }
                                }
                                @($"{totalQuantity} {item.Product.UsageUnit}")
                            }
                            else
                            {
                                @item.Quantity
                            }
                        </td>
                        <td class="text-center">@item.Price?.Amount</td>
                        <td class="text-center">@item.Price?.Currency</td>
                        <td class="text-center">@item.Status</td>
                        <td class="text-center">@item.StartDate</td>
                        <td class="text-center">@item.EndDate</td>
                        <td class="text-center">@item.TestMode</td>
                        <td class="text-center">
                            @if (item.Product?.Type == "METERED")
                            {
                                <form asp-action="PostUsage" method="post" style="display:inline;">
                                    <input type="hidden" name="subscriptionId" value="@subscription.Id" />
                                    <input type="hidden" name="subscriptionItemId" value="@item.Id" />
                                    <input type="number" name="quantity" value="1" min="1" class="form-control form-control-sm mb-1" />
                                    <button type="submit" class="btn btn-sm btn-primary">Post Usage</button>
                                </form>
                            }
                            else
                            {
                                <span class="text-muted">N/A</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    
        @if (TempData["UsagePostSuccess"] != null)
        {
            <div class="alert alert-success">
                @TempData["UsagePostSuccessMessage"]
            </div>
        }
    }
    <br />
    <h5>Raw JSON Response</h5>
    <textarea class="form-control" readonly style="height: 350px">@ViewBag.SubscriptionJsonResponse</textarea>
}
else
{
    <div class="alert alert-warning">
        No active subscription found.
    </div>
}

<style>
    th {
        white-space: nowrap;
    }

    td {
        vertical-align: middle;
    }
    tr{
        vertical-align: middle;
    }
    .text-center {
        vertical-align: middle;
        text-align: center;
    }

    table {
        font-size: 0.95rem;
    }
</style>
